pipeline {
    // Docker-specific agent configuration
    agent {
        docker {
            // Use multi-stage build image
            image 'maven:3.9.9-eclipse-temurin-21-alpine'
            
            // Optional: Add custom arguments
            args '-v maven-repo:/root/.m2 --network build-network'
            
            // Optional: Custom dockerfile
            // dockerfile true
            // dockerfilePath './Dockerfile.build'
        }
    }
    
    // Environment configuration
    environment {
        // Docker-specific environment variables
        DOCKER_REGISTRY = 'your-docker-registry.com'
        APP_NAME = 'sample-java-app'
        VERSION = "${env.BUILD_NUMBER}"
    }
    
    stages {
        stage('Prepare') {
            steps {
                // Docker-specific prep
                sh 'mvn clean validate'
            }
        }
        
        stage('Build') {
            steps {
                sh 'mvn compile package -DskipTests=true'
            }
        }
        
        stage('Test') {
            steps {
                sh 'mvn test'
            }
            post {
                always {
                    junit '**/target/surefire-reports/TEST-*.xml'
                }
            }
        }
        
        stage('Docker Build') {
            steps {
                script {
                    docker.build("${DOCKER_REGISTRY}/${APP_NAME}:${VERSION}")
                }
            }
        }
        
        stage('Docker Push') {
            steps {
                script {
                    docker.withRegistry('https://${DOCKER_REGISTRY}', 'docker-credentials') {
                        docker.image("${DOCKER_REGISTRY}/${APP_NAME}:${VERSION}").push()
                    }
                }
            }
        }
    }
    
    post {
        success {
            echo 'Build successful! Docker image created and pushed.'
        }
        
        failure {
            echo 'Build failed. Cleaning up...'
        }
        
        always {
            cleanWs()
        }
    }
}
